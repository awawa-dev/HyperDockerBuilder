name: HyperHdr Docker Builder

on:
  push:

jobs:
  DevelopmentDockerBuilder:
    name: ghcr.io/awawa-dev/${{ matrix.architecture }}/${{ matrix.distro }}:${{ matrix.distroVersion }}
    runs-on: ${{ matrix.runner }}
    permissions:
      packages: write

    strategy:
      matrix:
        architecture: [ x86_64, armhf, arm64]
        distroVersion: [ bullseye, bookworm]
        include:
          - runner: ubuntu-24.04
            architecture: x86_64
            distro: archlinux
            distroVersion: rolling
            dockerSource: library/archlinux:base-devel
            tool: buildArch

          - runner: ubuntu-24.04
            architecture: x86_64
            distro: fedora
            distroVersion: 42
            tool: buildFedora

          - runner: ubuntu-24.04
            architecture: x86_64
            distro: ubuntu
            distroVersion: jammy
            tool: buildDebian

          - runner: ubuntu-24.04
            architecture: x86_64
            distro: ubuntu
            distroVersion: noble
            tool: buildDebian

          - runner: ubuntu-24.04
            architecture: x86_64
            distro: ubuntu
            distroVersion: noble
            tool: buildDebian
                     
          - runner: ubuntu-24.04
            architecture: x86_64
            distro: debian
            tool: buildDebian

          - runner: ubuntu-24.04-arm
            architecture: arm64
            distro: debian
            dockerSource: balenalib/raspberrypi3-64:{distroVersion}-build
            tool: buildDebian

          - runner: ubuntu-24.04-arm
            architecture: armhf            
            distro: debian
            dockerSource: balenalib/raspberry-pi:{distroVersion}-build
            tool: buildDebian

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Set docker meta-data
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/awawa-dev/${{ matrix.architecture }}/${{ matrix.distro }}
          tags: |
            type=raw,value=${{ matrix.distroVersion }} 
          labels: |
            maintainer=HyperHDR
            org.opencontainers.image.title=${{ matrix.distro }} (${{ matrix.distroVersion }})
            org.opencontainers.image.description=HyperHDR build environment
            org.opencontainers.image.url=https://hyperhdr.eu
            org.opencontainers.image.source=https://github.com/awawa-dev/HyperDockerBuilder
            org.opencontainers.image.vendor=HyperHDR
            org.opencontainers.image.licenses=MIT
          annotations: |
            maintainer=HyperHDR
            org.opencontainers.image.title=${{ matrix.distro }} (${{ matrix.distroVersion }})
            org.opencontainers.image.description=HyperHDR build environment
            org.opencontainers.image.url=https://hyperhdr.eu
            org.opencontainers.image.source=https://github.com/awawa-dev/HyperDockerBuilder
            org.opencontainers.image.vendor=HyperHDR
            org.opencontainers.image.licenses=MIT            

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
     
      - name: Prepare docker source
        run: |
          input="${{ matrix.dockerSource }}"
          from="{distroVersion}"
          to="${{ matrix.distroVersion }}"
          result="${input//$from/$to}"
          echo "REPLACED_DOCKER_SOURCE=${result}" >> $GITHUB_ENV

      - name: Build & push docker container
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          file: ${{ matrix.tool }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
              DOCKER_SOURCE=${{ matrix.dockerSource != '' && env.REPLACED_DOCKER_SOURCE || format('{0}:{1}', matrix.distro, matrix.distroVersion) }}
